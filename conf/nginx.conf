daemon off;
worker_processes 1;

error_log /dev/stderr warn;
pid /tmp/nginx.pid;

events {
  use epoll;
  worker_connections 128;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;
  error_log /dev/stderr;

  sendfile on;
  #tcp_nopush     on;

  keepalive_timeout 65;

  gzip on;

  include /etc/nginx/conf.d/*.conf;

  # WordPress single site rules.
  # Designed to be included in any server {} block.
  # Upstream to abstract backend connection(s) for php
  upstream php-backend {
    server php-fpm:9000 max_conns=10;
  }

  server {
    listen 8080;
    ## Your website name goes here.
    server_name wordpress.loc;
    ## Your only path reference.
    root /app;
    ## This should be in your http block and if it is, it's not needed here.
    index index.php;

    client_max_body_size 10M;

    # default files forbidden due to version info
    location ^~ /readme.html {
      return 403;
    }
    location ^~ /license.html {
      return 403;
    }

    # private files
    location ^~ /wp-config {
      return 403;
    }
    location ^~ /wp-settings {
      return 403;
    }

    location / {
      # This is cool because no php is touched for static content.
      # include the "?$args" part so non-default permalinks doesn't break when using query string
      # try_files $uri $uri/ /index.php?$args;
      try_files $uri $uri/ /index.php?$args ;
    }

    location ~ \.php$ {
      #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
      include fastcgi.conf;
      fastcgi_intercept_errors on;
      fastcgi_pass php-backend;
      fastcgi_buffers 16 16k;
      fastcgi_buffer_size 32k;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
      expires max;
      log_not_found off;
    }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
      deny all;
    }

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
      deny all;
    }

    # fpm monitor
    location ~ /fpm-(status|ping) {
      include fastcgi.conf;
      fastcgi_pass php-backend;
      access_log off;
      allow 127.0.0.1;
      deny all;
    }

    # nginx monitor
    location ~ /nginx-status {
      stub_status on;
      access_log off;
      allow 127.0.0.1;
      deny all;
    }
  }
}